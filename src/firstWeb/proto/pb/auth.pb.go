// Code generated by protoc-gen-go.
// source: auth.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	auth.proto

It has these top-level messages:
	TAuthInfo
	TAuthLoginArg
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import sync "sync"
import gob "encoding/gob"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TAuthInfo struct {
	Token            *string `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
	NickName         *string `protobuf:"bytes,2,opt,name=NickName" json:"NickName,omitempty"`
	Mail             *string `protobuf:"bytes,3,opt,name=Mail" json:"Mail,omitempty"`
	PhoneNum         *string `protobuf:"bytes,4,opt,name=PhoneNum" json:"PhoneNum,omitempty"`
	Uid              *string `protobuf:"bytes,5,opt,name=Uid" json:"Uid,omitempty"`
	Message          *string `protobuf:"bytes,6,opt,name=Message" json:"Message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

var gTAuthInfoDummy TAuthInfo
var poolTAuthInfo = sync.Pool{
	New: func() interface{} {
		return new(TAuthInfo)
	},
}

func NewTAuthInfo() *TAuthInfo {
	obj := poolTAuthInfo.Get().(*TAuthInfo)
	obj.Reset()
	return obj
}
func (m *TAuthInfo) Put() {
	poolTAuthInfo.Put(m)
}
func (m *TAuthInfo) Reset()         { *m = gTAuthInfoDummy }
func (m *TAuthInfo) String() string { return proto.CompactTextString(m) }
func (*TAuthInfo) ProtoMessage()    {}

func (m *TAuthInfo) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *TAuthInfo) SetToken(v string) {
	if m != nil {
		if m.Token != nil {
			*m.Token = v
		} else {
			m.Token = &v
		}
	}
}

func (m *TAuthInfo) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *TAuthInfo) SetNickName(v string) {
	if m != nil {
		if m.NickName != nil {
			*m.NickName = v
		} else {
			m.NickName = &v
		}
	}
}

func (m *TAuthInfo) GetMail() string {
	if m != nil && m.Mail != nil {
		return *m.Mail
	}
	return ""
}

func (m *TAuthInfo) SetMail(v string) {
	if m != nil {
		if m.Mail != nil {
			*m.Mail = v
		} else {
			m.Mail = &v
		}
	}
}

func (m *TAuthInfo) GetPhoneNum() string {
	if m != nil && m.PhoneNum != nil {
		return *m.PhoneNum
	}
	return ""
}

func (m *TAuthInfo) SetPhoneNum(v string) {
	if m != nil {
		if m.PhoneNum != nil {
			*m.PhoneNum = v
		} else {
			m.PhoneNum = &v
		}
	}
}

func (m *TAuthInfo) GetUid() string {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return ""
}

func (m *TAuthInfo) SetUid(v string) {
	if m != nil {
		if m.Uid != nil {
			*m.Uid = v
		} else {
			m.Uid = &v
		}
	}
}

func (m *TAuthInfo) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *TAuthInfo) SetMessage(v string) {
	if m != nil {
		if m.Message != nil {
			*m.Message = v
		} else {
			m.Message = &v
		}
	}
}

type TAuthLoginArg struct {
	Account          *string `protobuf:"bytes,1,opt,name=Account" json:"Account,omitempty"`
	PassWord         *string `protobuf:"bytes,2,opt,name=PassWord" json:"PassWord,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

var gTAuthLoginArgDummy TAuthLoginArg
var poolTAuthLoginArg = sync.Pool{
	New: func() interface{} {
		return new(TAuthLoginArg)
	},
}

func NewTAuthLoginArg() *TAuthLoginArg {
	obj := poolTAuthLoginArg.Get().(*TAuthLoginArg)
	obj.Reset()
	return obj
}
func (m *TAuthLoginArg) Put() {
	poolTAuthLoginArg.Put(m)
}
func (m *TAuthLoginArg) Reset()         { *m = gTAuthLoginArgDummy }
func (m *TAuthLoginArg) String() string { return proto.CompactTextString(m) }
func (*TAuthLoginArg) ProtoMessage()    {}

func (m *TAuthLoginArg) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *TAuthLoginArg) SetAccount(v string) {
	if m != nil {
		if m.Account != nil {
			*m.Account = v
		} else {
			m.Account = &v
		}
	}
}

func (m *TAuthLoginArg) GetPassWord() string {
	if m != nil && m.PassWord != nil {
		return *m.PassWord
	}
	return ""
}

func (m *TAuthLoginArg) SetPassWord(v string) {
	if m != nil {
		if m.PassWord != nil {
			*m.PassWord = v
		} else {
			m.PassWord = &v
		}
	}
}

func init() {
	proto.RegisterType((*TAuthInfo)(nil), "pb.TAuthInfo")
	gob.Register((*TAuthInfo)(nil))
	proto.RegisterType((*TAuthLoginArg)(nil), "pb.TAuthLoginArg")
	gob.Register((*TAuthLoginArg)(nil))
}
